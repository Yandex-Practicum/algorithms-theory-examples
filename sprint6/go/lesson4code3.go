func DFS(startVertex int) {
    stack := []int{startVertex}
    for len(stack) > 0 {
        v := stack[len(stack)-1] // Получаем из стека очередную вершину.
        stack = stack[:len(stack)-1] // Удаляем вершину из стека.
        if color[v] == white {
            // Красим вершину в серый. И сразу кладём её обратно в стек:
            // это позволит алгоритму позднее вспомнить обратный путь по графу.
            color[v] = gray
            stack = append(stack, v)
            // Теперь добавляем в стек все непосещённые соседние вершины,
            // вместо вызова рекурсии
            for _, w := range adjList[v] { // Перебираем смежные вершины.
                if color[w] == white { // Если вершина не посещена, то
                    stack = append(stack, w)
                }
            }
        } else if color[v] == gray {
            // Серую вершину мы могли получить из стека только на обратном пути.
            // Следовательно, её следует перекрасить в чёрный.
            color[v] = black
        }
    }
}
